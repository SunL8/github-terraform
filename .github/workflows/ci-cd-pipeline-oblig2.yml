name: Terraform CI/CD

on:
  push:
    branches:
      - 'dev'
      - 'staging'
      - 'prod'
    paths:
      - 'oblig2/**'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  WORKING_DIR: ./oblig2

jobs:
  dev_stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply Dev
        run: terraform apply --auto-approve -var-file="terraform.tfvars.dev"
        working-directory: ${{ env.WORKING_DIR }}

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform workspace select or create staging
        if: github.event.inputs.environment == 'test'
        run: terraform workspace select staging || terraform workspace new staging
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply Staging
        run: terraform apply --auto-approve -var-file="terraform.tfvars.staging"
        working-directory: ${{ env.WORKING_DIR }}

  prod:
    needs: stage_prod
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform workspace select or create prod
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Plan Prod
        run: terraform plan -var-file="terraform.tfvars.prod"
        working-directory: ${{ env.WORKING_DIR }}

      - name: Manual Approval for Production
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply Prod
        run: terraform apply --auto-approve -var-file="terraform.tfvars.prod"
        working-directory: ${{ env.WORKING_DIR }}
