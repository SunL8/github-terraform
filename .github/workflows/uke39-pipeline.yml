name: Terraform CI/CD Pipeline

on:
  workflow_dispatch: # Allows manually triggering from GitHub UI
    inputs:
      workspace:
        description: "Choose workspace (test or production)"
        required: true
        default: "test"
        type: string

jobs:
  terraform:
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: ./module06/uke39 # Path to your Terraform code
        run: terraform init

      - name: Select Terraform Workspace
        working-directory: ./module06/uke39 # Path to your Terraform code
        run: terraform workspace select ${{ github.event.inputs.workspace }} || terraform workspace new ${{ github.event.inputs.workspace }}

      - name: Terraform Plan
        working-directory: ./module06/uke39 # Path to your Terraform code
        run: terraform plan -out=tfplan

      - name: Terraform Apply (TEST Workspace)
        if: ${{ github.event.inputs.workspace == 'test' }}
        working-directory: ./module06/uke39
        run: terraform apply -auto-approve tfplan

      - name: Manual Approval for PRODUCTION
        if: ${{ github.event.inputs.workspace == 'production' }}
        uses: hmarr/auto-approve-action@v2

      - name: Terraform Apply (PRODUCTION Workspace)
        if: ${{ github.event.inputs.workspace == 'production' }}
        working-directory: ./module06/uke39 # Path to your Terraform code
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: ${{ github.event.inputs.workspace == 'destroy' }}
        working-directory: ./module06/uke39 # Path to your Terraform code
        run: terraform destroy -auto-approve
